一. 用户登录的代码思路：
      后端实现的整体实现：
            1. 参数判断
               用户姓名 非空判断
               用户密码 非空判断
            2. 先通过用户名查询用户记录，返回用户对象
            3. 判断用户对象是否为空
            4. 如果用户对象不为空，则将前台传递的用户密码与数据库中的用户密码进行比较
            5. 判断密码是否正确，如果密码正确，则登录成功，返回结果

      Controller层(控制层): 接受请求 响应结果
            1. 通过形参接收客户端传递的参数
            2. 通过调用Service层的登录方法，得到登录的结果
            3. 响应数据给客户端

      Service层(业务逻辑层): 做判断(非空判断、条件判断等)
            1. 参数判断，判断用户姓名、密码非空等，如果参数为空，则抛出异常给Controller层做相应的处理
            2. 调用Dao数据访问层，通过用户名查询用户记录，返回用户对象
            3. 判断用户对象是否为空，如果对象为空，则也抛出异常给Controller层做相应的处理
            4. 如果存在用户记录，则判断前端传来的密码是否和数据库中的密码是否相等，如果密码不正确，则也抛出异常给Controller层做相应的处理
            5. 如果前面的所有操作都正确，则登录成功

      Dao层(数据访问层): 在数据库中进行CRUD操作
            1. 通过用户名来查询用户记录，返回用户对象

二. 修改密码
    后端的实现：
    Controller层：
        1. 通过形参接收参数(原始密码、新密码、确认密码)
        2. 通过request对象，获取设置在cookie中的用户ID
        3. 调用Service层修改密码的方法，返回ResultInfo对象

    Service层：
        1. 接收四个参数：用户ID、原始密码、新密码、确认密码
        2. 通过用户ID查询用户记录，返回一个用户对象
        3. 参数校验：
            包括待更新的用户记录是否存在、
            原始密码是否为空、
            原始密码是否正确、
            判断新密码是否为空、
            新密码是否和确认密码一样、
            不允许新密码与原始密码一致
        4. 设置用户新密码，将新密码通过MD5算法进行加密
        5. 执行更新操作，判断受影响的行数

    Dao层：
        1. 通过用户ID修改用户密码，返回的也是受影响的行数













